name: CI/CD Pipeline Render

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy-render:
    name: Deploy to Render
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://devospgitaction-1.onrender.com
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup project structure
      run: |
        # Créer le répertoire Render
        sudo mkdir -p /opt/render/project/src/
        sudo chown -R $USER:$USER /opt/render/project/

        # Copier tout le projet
        cp -r . /opt/render/project/src/

        # Rendre le script executable
        chmod +x /opt/render/project/src/build.sh

        echo "Project structure setup complete"
        ls -la /opt/render/project/src/

    - name: Verify Render Credentials
      run: |
        if [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
          echo "Error: RENDER_SERVICE_ID is not set"
          exit 1
        fi
        if [ -z "${{ secrets.RENDER_API_KEY }}" ]; then
          echo "Error: RENDER_API_KEY is not set"
          exit 1
        fi
        echo "Render credentials verified"

    - name: Deploy to Render
      uses: JorgeLNJunior/render-deploy@v1.4.3
      with:
        service_id: ${{ secrets.RENDER_SERVICE_ID }}
        api_key: ${{ secrets.RENDER_API_KEY }}
        wait_deploy: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
        deployment_environment: production
        clear_cache: true

    - name: Backup Deploy Method
      if: failure()
      run: |
        DEPLOY_HOOK_URL="https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
        echo "Triggering deploy using webhook..."
        curl -X POST $DEPLOY_HOOK_URL
        
        echo "Waiting for deployment to complete..."
        sleep 120

    - name: Verify Deployment
      run: |
        echo "Verifying deployment..."
        
        # Vérifier le frontend
        curl -f "https://devospgitaction-1.onrender.com" || echo "Frontend not responding"
        
        # Vérifier les microservices
        for port in 9001 9002 9003 9004 9005; do
          echo "Checking service on port $port..."
          curl -f "https://devospgitaction-1.onrender.com:$port/actuator/health" || echo "Service on port $port not responding"
        done 