on:
  push:
    branches: [ develop, staging ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' 

- name: Build and push Docker images
  run: |
    # Build et push frontend
    if [ -d "frontenddevops" ]; then
      echo "Building frontend Docker image"
      docker build -t "${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest" ./frontenddevops
      docker push "${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest"
    fi

    # Build et push microservices
    declare -A services=(
      ["microservice-gestion-cours"]="9001"
      ["microservice-gestion-prof"]="9002"
      ["microservice-gestion-etudiant"]="9003"
      ["microservice-gestion-classe"]="9004"
      ["microservice-gestion-emploi-du-temp"]="9005"
    )

    for service in "${!services[@]}"; do
      if [ -d "$service" ]; then
        SERVICE_NAME=$(echo $service | cut -d'-' -f3-)
        echo "Building $service"
        docker build -t "${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE_NAME:latest" ./$service
        docker push "${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE_NAME:latest"
      fi
    done 

- name: Build Frontend
  run: |
    if [ -d "frontenddevops" ]; then
      cd frontenddevops
      
      # Clean install
      rm -rf node_modules package-lock.json
      
      # Install dependencies
      npm install --legacy-peer-deps --force
      npm install bootstrap@5.3.0 @popperjs/core@2.11.8 --save
      
      # Build with increased memory
      export NODE_OPTIONS="--max_old_space_size=4096"
      npm run build -- --configuration production
      
      cd ..
    fi 